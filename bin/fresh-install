#!/usr/bin/env python3
"""
fresh-install <https://gerrit.wikimedia.org/g/fresh>

This is free and unencumbered software released into the public domain.
"""

import base64
import hashlib
import os
import stat
import sys
import urllib.request


def install_bin_all():
    """
    Download, verify, and install a shell command.
    """

    # During development this can be a recent commit hash instead of a release tag,
    # to allow full testing prior to release.
    FRESH_VERSION='21.09.1'
    FRESH_NODE10_SHA256='ab62b4b0081b325fa108de4fa47659cf2fce7501c5d5f2890eff56b7241c8ffc'
    FRESH_NODE12_SHA256='8652aad22feb5e623bf2d5a9a52552c19699b996ba2d7c593d731d63216d5172'
    FRESH_NODE14_SHA256='ba29a5666ddf84e52de3bd81082afd14efd3b153b53049ddc33b1bb5f74bf912'

    install_bin(FRESH_VERSION, 'fresh-node10', FRESH_NODE10_SHA256, 'fresh-node10')
    install_bin(FRESH_VERSION, 'fresh-node12', FRESH_NODE12_SHA256, 'fresh-node')
    install_bin(FRESH_VERSION, 'fresh-node14', FRESH_NODE14_SHA256, 'fresh-node14')

    print('%s  Fresh %s is now ready!' % (u'\U0001F331', FRESH_VERSION))


def debug_checksums():
    """
    Make and print new checksums.
    This is for use during release prep, to help update fresh-install.
    """
    make_checksum('fresh-node10')
    make_checksum('fresh-node12')
    make_checksum('fresh-node14')


def error_exit(message):
    print('fresh-install: %s' % (message), file=sys.stderr)
    print(u'\u274C')
    sys.exit(1)


def install_bin(version_src, cmd_src, cmd_integrity, cmd_dest):
    # Download
    url = 'https://gerrit.wikimedia.org/g/fresh/+/%s/bin/%s?format=TEXT' % (version_src, cmd_src)
    req = urllib.request.Request(url, headers={
        'User-Agent': 'Fresh/%s (Bot) https://gerrit.wikimedia.org/g/fresh' % (version_src)
    })
    try:
        with urllib.request.urlopen(req) as resp:
            data = resp.read().decode('utf-8')
    except urllib.error.HTTPError as e:
        error_exit('HTTP %s at %s' % (e.code, url))

    data = base64.b64decode(data)

    # Verify
    checksum = hashlib.sha256(data).hexdigest()
    if checksum != cmd_integrity:
        error_exit('checksum of %s does not match' % (cmd_src))

    # Store file
    content = str(data, encoding='utf-8')
    dest = '/usr/local/bin/%s' % (cmd_dest)
    with open(dest, 'w') as f:
        f.write(content)

    # Make file executable
    current = os.stat(dest)
    os.chmod(dest, current.st_mode | stat.S_IEXEC)


def make_checksum(cmd_src):
    with open('./bin/%s' % cmd_src, 'r') as f:
        checksum = hashlib.sha256(f.read().encode('utf-8')).hexdigest()

    print('New checksum for %s: %s' % (cmd_src, checksum))


debug = (len(sys.argv) == 2 and sys.argv[1] == '--debug')
if debug:
    debug_checksums()
else:
    install_bin_all()
